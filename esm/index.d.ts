// Generated by dts-bundle-generator v8.1.2

export type IndexedRedis<T> = ReturnType<typeof indexedRedis<T>>;
export declare const indexedRedis: <T>(dbName: string) => {
	set: <K extends keyof T>(key: K, value: T[K]) => Promise<void>;
	setEx: (key: keyof T, expireMillisecond: number, value: T[keyof T]) => Promise<void>;
	get: <K_1 extends keyof T>(key: K_1) => Promise<T[K_1] | undefined>;
	getAll: () => Promise<Partial<T>>;
	assignEx: <K_2 extends keyof T>(key: K_2, expireMillisecond: number, obj: T[K_2]) => Promise<T[K_2]>;
	del: <K_3 extends keyof T>(key: K_3) => Promise<T[K_3] | undefined>;
	flushDb: () => Promise<void>;
	clearExpiredItems: (force?: boolean) => Promise<Partial<T> | undefined>;
};

export {};
